# Generated by Django 5.1.1 on 2024-09-28 16:14

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('register', '0011_alter_registrationkey_key'),
    ]

    operations = [
        migrations.CreateModel(
            name='CzłonekZespolu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imie', models.CharField(max_length=100)),
                ('nazwisko', models.CharField(max_length=100)),
                ('rola', models.CharField(max_length=100)),
                ('doswiadczenie', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Konkurs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazwa', models.CharField(max_length=255)),
                ('opis', models.TextField()),
                ('calkowita_kwota', models.DecimalField(decimal_places=2, max_digits=10)),
                ('data_ogloszenia', models.DateField()),
                ('data_zakonczenia_skladania_ofert', models.DateField()),
                ('infolinia_telefon', models.CharField(max_length=20)),
                ('infolinia_email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazwa', models.CharField(max_length=255)),
                ('opis', models.TextField()),
            ],
        ),
        migrations.RemoveField(
            model_name='employee',
            name='company',
        ),
        migrations.RemoveField(
            model_name='employee',
            name='user',
        ),
        migrations.CreateModel(
            name='NGO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazwaOrganizacji', models.CharField(max_length=100, null=True, verbose_name='Organization Name')),
                ('adresEmail', models.EmailField(max_length=100, null=True, verbose_name='Email Address')),
                ('numerTelefonuKom', models.CharField(max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number.', regex='^\\+?1?\\d{9,15}$')], verbose_name='Mobile Phone Number')),
                ('numerTelefonuSta', models.CharField(max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number.', regex='^\\+?1?\\d{9,15}$')], verbose_name='Landline Phone Number')),
                ('branza', models.CharField(max_length=100, null=True, verbose_name='Industry')),
                ('cel', models.TextField(null=True, verbose_name='Goal')),
                ('rozmiarOrganizacji', models.CharField(max_length=50, null=True, verbose_name='Organization Size')),
                ('rodzajFinansowania', models.CharField(max_length=50, null=True, verbose_name='Funding Type')),
                ('osobaKontaktowa', models.CharField(max_length=100, null=True, verbose_name='Contact Person')),
                ('RankingESG', models.CharField(max_length=100, null=True, verbose_name='ESG Ranking')),
                ('adres', models.CharField(max_length=150, null=True, verbose_name='Address')),
                ('miasto', models.CharField(max_length=50, null=True, verbose_name='City')),
                ('wojewodztwo', models.CharField(max_length=50, null=True, verbose_name='Province')),
                ('kodPocztowy', models.CharField(max_length=10, null=True, verbose_name='Postal Code')),
                ('kraj', models.CharField(max_length=50, null=True, verbose_name='Country')),
                ('strategia', models.TextField()),
                ('doswiadczenie', models.TextField()),
                ('cele_spoleczne', models.TextField()),
                ('cele_biznesowe', models.TextField()),
                ('zespol', models.ManyToManyField(related_name='organizacja_zespoly', to='register.członekzespolu')),
            ],
        ),
        migrations.AddField(
            model_name='członekzespolu',
            name='organizacja',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='czlonkowie_zespolu', to='register.ngo'),
        ),
        migrations.CreateModel(
            name='Firma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazwaFirmy', models.CharField(max_length=100, null=True, verbose_name='Company Name')),
                ('adresEmail', models.EmailField(max_length=100, null=True, verbose_name='Email Address')),
                ('numerTelefonuKom', models.CharField(max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number.', regex='^\\+?1?\\d{9,15}$')], verbose_name='Mobile Phone Number')),
                ('numerTelefonuSta', models.CharField(max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number.', regex='^\\+?1?\\d{9,15}$')], verbose_name='Landline Phone Number')),
                ('branza', models.CharField(max_length=100, null=True, verbose_name='Industry')),
                ('cel', models.TextField(null=True, verbose_name='Purpose or Goal')),
                ('rozmiarFirmy', models.CharField(max_length=50, null=True, verbose_name='Company Size')),
                ('rodzajFinansowania', models.CharField(max_length=50, null=True, verbose_name='Funding Type')),
                ('osobaKontaktowa', models.CharField(max_length=100, null=True, verbose_name='Contact Person')),
                ('RankingESG', models.CharField(max_length=100, null=True, verbose_name='ESG Ranking')),
                ('adres', models.CharField(max_length=150, null=True, verbose_name='Address')),
                ('miasto', models.CharField(max_length=50, null=True, verbose_name='City')),
                ('wojewodztwo', models.CharField(max_length=50, null=True, verbose_name='Province')),
                ('kodPocztowy', models.CharField(max_length=10, null=True, verbose_name='Postal Code')),
                ('kraj', models.CharField(max_length=50, null=True, verbose_name='Country')),
                ('strategia_spolecznego_oddzialywania', models.TextField()),
                ('cele_spoleczne', models.TextField()),
                ('cele_biznesowe', models.TextField()),
                ('budzet_spoleczny', models.DecimalField(decimal_places=2, max_digits=12)),
                ('granty', models.ManyToManyField(blank=True, related_name='firmy', to='register.konkurs')),
                ('partnerzy', models.ManyToManyField(blank=True, related_name='firmy', to='register.partner')),
            ],
        ),
        migrations.CreateModel(
            name='Priorytet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numer', models.IntegerField()),
                ('nazwa', models.CharField(max_length=255)),
                ('opis', models.TextField()),
                ('kwota_2024', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('kwota_2025', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('kwota_2026', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('konkurs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='priorytety', to='register.konkurs')),
            ],
        ),
        migrations.CreateModel(
            name='Projekt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazwa', models.CharField(max_length=255)),
                ('opis', models.TextField()),
                ('data_rozpoczecia', models.DateField(blank=True, null=True)),
                ('data_zakonczenia', models.DateField(blank=True, null=True)),
                ('organizacja', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projekty', to='register.ngo')),
            ],
        ),
        migrations.CreateModel(
            name='Terminy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_realizacji', models.DateField()),
                ('koniec_realizacji', models.DateField()),
                ('data_rozstrzygniecia', models.DateField()),
                ('konkurs', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='terminy', to='register.konkurs')),
            ],
        ),
        migrations.CreateModel(
            name='Zadanie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numer', models.IntegerField()),
                ('nazwa', models.CharField(max_length=255)),
                ('opis', models.TextField()),
                ('priorytet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='zadania', to='register.priorytet')),
            ],
        ),
        migrations.CreateModel(
            name='ZasadyDotacji',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maksymalna_dotacja', models.DecimalField(decimal_places=2, max_digits=10)),
                ('minimalna_dotacja', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('wymog_wkladu_wlasnego', models.BooleanField(default=False)),
                ('konkurs', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='zasady_dotacji', to='register.konkurs')),
            ],
        ),
        migrations.DeleteModel(
            name='RegistrationKey',
        ),
        migrations.DeleteModel(
            name='Company',
        ),
        migrations.DeleteModel(
            name='Employee',
        ),
    ]
